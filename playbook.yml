---
- hosts: all
  gather_facts: no
  tasks:
    - name: apt-get update 
      raw: sudo apt-get update -qq 
    - name: Install python 2.7 
      raw: sudo apt-get install -qq python2.7 

    - name: Fix hostname to allow sudo
      remote_user: root
      become: yes
      lineinfile: dest=/etc/hosts line='127.0.0.1 ubuntu-xenial' owner=root group=root mode=0644

    - name: Install git
      remote_user: root
      become: yes
      apt: pkg=git

    - name: Install PHP
      remote_user: root
      become: yes
      apt: pkg=php,php-bcmath,php-mbstring
    - name: Install composer
      remote_user: root
      become: yes
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer
    - name: Rename composer.phar to composer
      remote_user: root
      become: yes
      shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer
    - name: Make composer executable
      remote_user: root
      become: yes
      file: path=/usr/local/bin/composer mode=a+x state=file
    - name: Composer install command
      remote_user: vagrant
      become: yes
      shell: composer install
      args:
        chdir: /vagrant/src/web/

    - name: Install Node + npm
      remote_user: root
      become: yes
      apt: pkg=nodejs,npm,nodejs-legacy
    - name: Install node worker dependencies
      remote_user: root
      become: yes
      shell: npm install
      args:
          chdir: /vagrant/src/worker/

    - name: Install RabbitMQ
      remote_user: root
      become: yes
      apt: pkg=rabbitmq-server
    - name: Configure RabbitMQ
      remote_user: root
      become: yes
      template: src=rabbitmq.config dest=/etc/rabbitmq/rabbitmq.config
    - name: Set up Rabbit Management Console
      remote_user: root
      become: yes
      command: rabbitmq-plugins enable rabbitmq_management
    - name: Restart RabbitMQ
      remote_user: root
      become: yes
      service: name=rabbitmq-server state=restarted

    - name: Install Couchdb dependencies
      remote_user: root
      become: yes
      apt: pkg=build-essential,erlang-base-hipe,erlang-dev,erlang-manpages,erlang-eunit,erlang-nox,libicu-dev,libcurl4-openssl-dev,libmozjs185-dev,haproxy
    - name: Create CouchDB Source Dir
      remote_user: vagrant
      become: yes
      file: path=/vagrant/couchdb state=directory 
    - name: Get CouchDB 2.0 code
      remote_user: vagrant
      become: yes
      git: repo=https://git-wip-us.apache.org/repos/asf/couchdb.git dest=/vagrant/couchdb version=developer-preview-2.0
    - name: Install Grunt
      remote_user: root
      become: yes
      npm: name=grunt-cli global=yes
    - name: Compile CouchDB
      remote_user: root
      become: yes
      shell: ./configure --disable-docs && make
      args:
        chdir: /vagrant/couchdb
        creates: bin/couchjs

    - name: Install Python and other requestbin requirements
      remote_user: root
      become: yes
      apt: package=python3,python-pip,libevent-dev,gunicorn
    - name: Clone Requestbin
      remote_user: vagrant
      become: yes
      git: repo=https://github.com/Runscope/requestbin.git dest=/vagrant/requestbin
    - name: Install Requestbin dependencies
      pip: requirements=/vagrant/requestbin/requirements.txt
    - name: Copy requestbin systemd file over
      remote_user: root
      become: yes
      copy: src=systemd/requestbin.service dest=/etc/systemd/system/requestbin.service
    - name: Enable requestbin service
      remote_user: root
      become: yes
      raw: systemctl enable requestbin.service
    - name: Start requestbin service
      remote_user: root
      become: yes
      raw: systemctl start requestbin.service

    - name: Copy couchdb systemd file over
      remote_user: root
      become: yes
      copy: src=systemd/couchdb.service dest=/etc/systemd/system/couchdb.service
    - name: Copy couchdb-haproxy systemd file over
      remote_user: root
      become: yes
      copy: src=systemd/couchdb-haproxy.service dest=/etc/systemd/system/couchdb-haproxy.service
    - name: Copy guestbook-web systemd file over
      remote_user: root
      become: yes
      copy: src=systemd/guestbook-web.service dest=/etc/systemd/system/guestbook-web.service
    - name: Copy guestbook-worker systemd file over
      remote_user: root
      become: yes
      copy: src=systemd/guestbook-worker.service dest=/etc/systemd/system/guestbook-worker.service

    - name: Enable guestbook-web service
      remote_user: root
      become: yes
      raw: systemctl enable guestbook-web.service
    - name: Enable couchdb service
      remote_user: root
      become: yes
      raw: systemctl enable couchdb.service
    - name: Enable couchdb-haproxy service
      remote_user: root
      become: yes
      raw: systemctl enable couchdb-haproxy.service
    - name: Enable guestbook-worker service
      remote_user: root
      become: yes
      raw: systemctl enable guestbook-worker.service

    - name: Reload Systemd config files
      remote_user: root
      become: yes
      raw: systemctl daemon-reload


    - name: Start guestbook-web service
      remote_user: root
      become: yes
      raw: systemctl start guestbook-web.service
    - name: Start couchdb service
      remote_user: root
      become: yes
      raw: systemctl start couchdb.service
    - name: Start couchdb-haproxy service
      remote_user: root
      become: yes
      raw: systemctl start couchdb-haproxy.service
    - name: Start guestbook-worker service
      remote_user: root
      become: yes
      raw: systemctl start guestbook-worker.service



